# NECESSARY GITHUB SECRETS TO SET              #
################################################
# secrets.imagename : e.g "<org>/<image>"
# secrets.registryuser
# secrets.registrypwd
# secrets.server : (not currently implemented)
################################################

name: Docker Image CI

# Leave out specific branches so this same workflow can be used on any branch
on:
  push:
  workflow_dispatch:
  pull_request_target:
    types: [ opened, reopened, edited, synchronize, closed]

jobs:

  buildAndTest:
    runs-on: ubuntu-latest
    steps:

    - name: Set environment variables
      run: |
        tag=${{ github.ref }} && tag=${tag##*/}
        echo "tag=${tag}" >> $GITHUB_ENV
        echo "containerName=ldm" >> $GITHUB_ENV

    # Checkout the commit that triggered the workflow
    - uses: actions/checkout@v2

    - name: Build the Docker image
      run: docker build --no-cache --tag ${{ secrets.imagename }}:${{ env.tag }} .

    - name: Run the container
      run: |
        docker run --name ${{ env.containerName }} \
        -e LDM_USER_ID=$(id -u) \
        -e LDM_GROUP_ID=$(getent group $USER | cut -d : -f3) \
        -v $(pwd)/etc:/home/ldm/etc \
        -v $(pwd)/data:/home/ldm/var/data \
        -v $(pwd)/queues:/home/ldm/var/queues \
        -v $(pwd)/logs:/home/ldm/var/logs \
        -d \
        -p 388:388 \
        ${{ secrets.imagename }}:${{ env.tag }}

    - name: Test ldm
      run: docker exec ${{ env.containerName }} ldmadmin config

    - name: Push to Dockerhub
      if: ${{ github.event_name == 'workflow_dispatch' || github.event.pull_request.merged == true}}
      run: |
        echo "Event that triggered workflow: ${{ github.event_name }}"
        docker logout
        echo ${{ secrets.registrypwd }} | docker login -u ${{ secrets.registryuser }} --password-stdin
        docker push ${{ secrets.imagename }}:${{ env.tag }} &&
        { docker logout && echo "Successfully pushed ${{ secrets.imagename }}:${{ env.tag }}"; } ||
        { docker logout && echo "Docker push failed" && exit 1; }
